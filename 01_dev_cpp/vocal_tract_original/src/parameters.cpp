
// ==============================================================================
// 
// Copyright or © or Copr:
//     Antoine Falaize
// 
// Affiliation:
//     Team M2N (Mathematical and Numerical Methods),
//     Laboratoire des Sciences de l'Ingénieur pour l'Environnement (LaSIE),
//     UMR CNRS 7356, La Rochelle Université,
//     La Rochelle, France.
// 
// Contact:
//     antoine.falaize@univ-lr.fr
// 
// This file has been generated by the Python software PyPHS, which purpose
// is to model and simulate multiphysical systems in the Port-Hamiltonian
// formalism. See the website at the following url:
// "https://pyphs.github.io/pyphs/".
// 
// Created on:
//     2020/05/06 15:55:15
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// A copy of the GNU General Public License is available at the following url:
// "https://www.gnu.org/licenses/"
// 
// ==============================================================================
# include "parameters.h"

// Correspondance is
// subs[key][0] = P_0
// subs[key][1] = rho_0
// subs[key][2] = gamma
// subs[key][3] = Z_ray
// subs[key][4] = ell_1
// subs[key][5] = L_1
// subs[key][6] = V_0_1
// subs[key][7] = ell_2
// subs[key][8] = L_2
// subs[key][9] = V_0_2
// subs[key][10] = ell_3
// subs[key][11] = L_3
// subs[key][12] = V_0_3
// subs[key][13] = ell_4
// subs[key][14] = L_4
// subs[key][15] = V_0_4
// subs[key][16] = ell_5
// subs[key][17] = L_5
// subs[key][18] = V_0_5
// subs[key][19] = ell_6
// subs[key][20] = L_6
// subs[key][21] = V_0_6
// subs[key][22] = k_1
// subs[key][23] = r_1
// subs[key][24] = k_2
// subs[key][25] = r_2
// subs[key][26] = k_3
// subs[key][27] = r_3
// subs[key][28] = k_4
// subs[key][29] = r_4
// subs[key][30] = k_5
// subs[key][31] = r_5
// subs[key][32] = k_6
// subs[key][33] = r_6


const double subs[1][34] = {     
    //==========================================================================
    // key 0
    {101325.0, 1.225, 1.4, 2222.222222222222, 0.014583333333333332, 0.02, 1.1666666666666666e-05, 0.014583333333333332, 0.02, 1.1666666666666666e-05, 0.014583333333333332, 0.02, 1.1666666666666666e-05, 0.014583333333333332, 0.02, 1.1666666666666666e-05, 0.014583333333333332, 0.06, 0.00010499999999999999, 0.014583333333333332, 0.06, 0.00010499999999999999, 845.0, 0.8, 845.0, 0.8, 845.0, 0.8, 845.0, 0.8, 845.0, 0.8, 845.0, 0.8},
};